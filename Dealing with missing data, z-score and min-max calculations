install.packages("ggplot2")
library(ggplot2)
require(ggplot2)
install.packages("arules")
library(arules)
require(arules)
install.packages("infotheo")
library(infotheo)
require(infotheo)
install.packages("rJava")
install.packages("infotheo")
library(infotheo)
require(RWeka)
#Read the file
water_data <- read.csv(file = "C:/Users/marol/Documents/KDD/KDD project/water_data.csv")
water_data_yes <- subset(water_data,water_data$Attack == "Y")

#EDA for shark attack v/s salinity using equal width binning
water_data_yes$salinityna = is.na(water_data_yes$Sal)
water_data_yes$Sal[water_data_yes$salinityna== TRUE] <- mean(na.omit(water_data_yes$Sal))
sal_dis <- discretize(water_data_yes$Sal,disc = "equalwidth",2)
water_data_yes$Sal_discretize <- sal_dis $X
is.numeric(water_data_yes$Sal_discretize)
water_data_yes$Sal_discretize[water_data_yes$Sal_discretize == 1] = 'Low(30-35)'
water_data_yes$Sal_discretize[water_data_yes$Sal_discretize == 2] = 'High(35-40)'
ggplot() + geom_bar(data =water_data_yes,
aes(x=factor(water_data_yes$Sal_discretize)),
position="stack")+xlab("Salinity")+ggtitle("Distribution of Salinity")
#EDA for shark attack v/s Turbidity using equal width binning
turb_dis <- discretize(water_data_yes$Turb,disc = "equalwidth",3)
water_data_yes$Turb_discretize <- turb_dis $X
water_data_yes$Turb_discretize[water_data_yes$Turb_discretize == 1] = 'Low(0-5)'
water_data_yes$Turb_discretize[water_data_yes$Turb_discretize == 2] = 'Medium(5-10)'
water_data_yes$Turb_discretize[water_data_yes$Turb_discretize == 3] = 'High(10-15)'
ggplot() + geom_bar(data =water_data_yes,
aes(x=factor(water_data_yes$Turb_discretize)),
position="stack")+xlab("Salinity")+ggtitle("Distribution of Salinity")
#Replacing missing values for TURBIDITY
sapply(water_data, function(x) sum(is.na(x)))
water_data$Date <- as.Date(water_data$Date, format('%m/%d/%Y'))
water_data$year <- format(water_data$Date,format="%Y")
water_data$month <- format(water_data$Date,format="%m")
water_data$turbna = is.na(water_data$Turb)
water_data$Turb[water_data$turbna== TRUE & water_data$year ==2011] <- mean(na.omit(water_data$Turb[water_data$year==2011]))
water_data$Turb[water_data$turbna== TRUE & water_data$year ==2012] <- mean(na.omit(water_data$Turb[water_data$year==2012]))
water_data$Turb[water_data$turbna== TRUE & water_data$year ==2013] <- mean(na.omit(water_data$Turb[water_data$year==2013]))
water_data$Turb[water_data$turbna== TRUE & water_data$year ==2014] <- mean(na.omit(water_data$Turb[water_data$year==2014]))
water_data$Turb[water_data$turbna== TRUE & water_data$year ==2015] <- mean(na.omit(water_data$Turb[water_data$year==2015]))
water_data$Turb[water_data$turbna== TRUE & water_data$year ==2016] <- mean(na.omit(water_data$Turb[water_data$year==2016]))

#Replacing missing values for SALINITY
water_data$salna = is.na(water_data$Sal)
water_data$Sal[water_data$salna== TRUE & water_data$year ==2011] <- mean(na.omit(water_data$Sal[water_data$year==2011]))
water_data$Sal[water_data$salna== TRUE & water_data$year ==2012] <- mean(na.omit(water_data$Sal[water_data$year==2012]))
water_data$Sal[water_data$salna== TRUE & water_data$year ==2013] <- mean(na.omit(water_data$Sal[water_data$year==2013]))
water_data$Sal[water_data$salna== TRUE & water_data$year ==2014] <- mean(na.omit(water_data$Sal[water_data$year==2014]))
water_data$Sal[water_data$salna== TRUE & water_data$year ==2015] <- mean(na.omit(water_data$Sal[water_data$year==2015]))
water_data$Sal[water_data$salna== TRUE & water_data$year ==2016] <- mean(na.omit(water_data$Sal[water_data$year==2016]))

#Replacing missing values for temp
water_data$tempna = is.na(water_data$Temp)
water_data$Temp[water_data$tempna== TRUE & water_data$year ==2011] <- mean(na.omit(water_data$Temp[water_data$year==2011]))
water_data$Temp[water_data$tempna== TRUE & water_data$year ==2012] <- mean(na.omit(water_data$Temp[water_data$year==2012]))
water_data$Temp[water_data$tempna== TRUE & water_data$year ==2013] <- mean(na.omit(water_data$Temp[water_data$year==2013]))
water_data$Temp[water_data$tempna== TRUE & water_data$year ==2014] <- mean(na.omit(water_data$Temp[water_data$year==2014]))
water_data$Temp[water_data$tempna== TRUE & water_data$year ==2015] <- mean(na.omit(water_data$Temp[water_data$year==2015]))
water_data$Temp[water_data$tempna== TRUE & water_data$year ==2016] <- mean(na.omit(water_data$Temp[water_data$year==2016]))
sapply(water_data, function(x) sum(is.na(x)))

#invalid data check
is.numeric(water_data$Sal)
is.numeric(water_data$Turb)

#mmnorm for salinity
water_data$mmnormSal <- (water_data$Sal-min(water_data$Sal))/(max(water_data$Sal)-min(water_data$Sal))
water_data$mmnormTurb <- (water_data$Turb-min(water_data$Turb))/(max(water_data$Turb)-min(water_data$Turb))

#Z-score
water_data$zscoreSal <- (water_data$Sal-mean(water_data$Sal))/sd(water_data$Sal)
water_data$zscoreTurb <- (water_data$Turb-mean(water_data$Turb))/sd(water_data$Turb)
box(which = "plot", lty="solid", col="black")
hist(water_data$zscoreSal,xlim=c(-5,5), main="histogram of Z-score",
xlab="Z score of salinity",ylab="Counts")
box(which = "plot", lty="solid", col="black")
hist(water_data$zscoreTurb,xlim=c(-4,6), main="histogram of Z-score",
xlab="Z score of Turbidity",ylab="Counts") #histogram to identify outlierszscore.sodium[zscore.sodium < -3]
water_data$zscoreSal[water_data$zscoreSal < -3] #No values
water_data$zscoreSal[water_data$zscoreSal >3 ]
water_data$zscoreTurb[water_data$zscoreTurb < -3] #No values
water_data$zscoreTurb[water_data$zscoreTurb >3 ]

write.csv(water_data,"C:/Users/marol/Documents/KDD/KDD project/min_mx_zscore.csv")
